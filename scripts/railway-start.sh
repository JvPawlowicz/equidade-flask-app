#!/bin/bash

# Script de inicializa√ß√£o para deploy Python/Flask no Railway

set -e

echo "üöÄ Preparando inicializa√ß√£o no Railway..."

# Verificar se o ambiente de produ√ß√£o est√° configurado
if [ "$NODE_ENV" != "production" ]; then
  export NODE_ENV="production"
  echo "‚ö†Ô∏è NODE_ENV n√£o definido, configurando para 'production'"
fi

# Verificar se a vari√°vel DATABASE_URL est√° definida
if [ -z "$DATABASE_URL" ]; then
  echo "‚ùå ERRO: DATABASE_URL n√£o est√° definida"
  exit 1
fi

# Verificar se a vari√°vel SESSION_SECRET est√° definida
if [ -z "$SESSION_SECRET" ]; then
  echo "‚ùå ERRO: SESSION_SECRET n√£o est√° definida"
  exit 1
fi

# Criar diret√≥rio de uploads se n√£o existir
if [ ! -d "uploads" ]; then
  echo "üìÅ Criando diret√≥rio de uploads..."
  mkdir -p uploads
fi

# Verificar e atualizar esquema do banco de dados
echo "üìä Verificando banco de dados..."
DB_STATUS=$(npx drizzle-kit check:pg --config=./drizzle.production.config.ts 2>&1)

if [[ $DB_STATUS == *"ERROR"* ]] || [[ $DB_STATUS == *"migrations"* ]]; then
  echo "‚ö†Ô∏è Esquema do banco de dados precisa ser atualizado"
  echo "üîÑ Aplicando altera√ß√µes..."
  npx drizzle-kit push --force --config=./drizzle.production.config.ts

  # Verificar se o banco de dados est√° vazio
  if [[ $DB_STATUS == *"tables created"* ]] || [ "$FORCE_SEED" = "true" ]; then
    echo "üå± Populando banco de dados..."
    NODE_ENV=production tsx db/seed.ts
  fi
else
  echo "‚úÖ Banco de dados OK - Nenhuma altera√ß√£o necess√°ria"
fi

# Inicializa banco de dados se necess√°rio
if [ -f "app/seed_admin.py" ]; then
  echo "üå± Rodando seed_admin.py para criar admin padr√£o (ignora erro se j√° existir)"
  python app/seed_admin.py || true
fi

# Inicia o servidor Flask com Gunicorn
exec gunicorn run:app